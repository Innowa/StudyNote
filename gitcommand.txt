
git config --global user.name "Your Name"
git config --global user.email "email@example.com"

//create git repository
git init

git add

git commit -m "(message)"

git status

//first push
git push -u (Internet git server) (branch)

//show difference
git diff 

//show log (oneline display)
git log (--pretty=oneline)

//back to previous version
git reset --hard HEAD^ (HEAD~(num))

//recover
git reset --hard (num)

//check history
git reflog

git diff HEAD -- (file)

//give up modification
git checkout -- (file)

git reset HEAD (file)

//delete file
git rm (file)

//add github repository
git remote add (origin) git@github.com:(username)/(dir).git

//isn't first push
git push (origin) (branch)

//clone github repository
git clone git@github.com:(username)/(repository).git

//create branch
git checkout -b (branchname)
==
git branch (branchname)
git checkout (branchname)

//show all branch
git branch

//switch branch
git checkout (branchname)

//merge branch
git merge (branchname)

//delete branch
git branch -d (branchname)

//show branch merge
git log --graph --pretty=oneline --abbrev-commit

//forbid Fast forward
git merge --no-ff (-m "(message)") (branchname)

//collect current workspace
git stash

//get stash workspace
git stash apply 
git stash drop
==
git stash pop

//check stash content
git stash list

//recover specific stash
git stash apply stash@{0}

//force delete branch
//force delete branch
git branch -D (branchname)

//check origin repository
git remote
git remote -v

//teamwork
1.git push origin branchname
2.git pull
3.git push origin branchname
4.git branch --set-upstream branchname origin/branchname

//create tag
git tag (name)

//check all tag
git tag

//add history tag
git tag (tagname) (commit id)

//order by alphabet
git show (tagname)

//create tag with content
git tag -a (tagname) -m "(message)" (commit id)

//sign by private key
git tag -s (tagname) -m "(message)" (commit id)

//delete tag
git tag -d (tagname)

//push tag to origin
git push origin (tagname)

//push all tag
git push origin --tags

//delete origin tag
git tag -d (tagname)
git push origin :refs/tags/(tagname)

//show git color
git config --global color.ui true

//create .gitignore file to ignore useless file

//force add
git add -f (filename)

//setting alias
git config --global alias.st status
git config --global alias.unstage 'reset HEAD'
git config --global alias.last 'log -1'
git config --global alias.lg "log --color --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit"

//config file url
cat .git/config

//create git server
1.sudo apt-get install git
2.sudo adduser git
3.collect all member's public key and import "/home/git/.ssh/authorized_keys" file
4.sudo git init --bare (gitname).git
  sudo chowm -R git:git (gitname).git
5.edit "/etc/passwd" file
  find "git:x:1001:1001:,,,:/home/git/:/bin/bash"
  change to "git:x:1001:1001:,,,:/home/git/:/usr/bin/git-shell"
6.git clone git@server:/srv/(gitname).git
